spring:
  # データベース設定（本番環境 - PostgreSQL）
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://dpg-d285h0ggjchc738ul2s0-a.oregon-postgres.render.com/mydb_t10f?sslmode=require}
    username: ${DATABASE_USERNAME:mydb_t10f_user}
    password: ${DATABASE_PASSWORD:eGZOMQiK0TTp9MBUxDPdF63PCip5fa0A}
    driver-class-name: org.postgresql.Driver
    # 接続プール設定
    hikari:
      maximum-pool-size: 3
      minimum-idle: 1
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 600000
      connection-test-query: SELECT 1
      validation-timeout: 3000
      leak-detection-threshold: 30000

  # Thymeleaf設定（本番環境）
  thymeleaf:
    cache: true
    mode: HTML

  # H2コンソール無効化（本番環境）
  h2:
    console:
      enabled: false

  # データ初期化無効化（本番環境 - 起動高速化）
  data:
    init:
      enabled: false
  
  # 起動時間短縮のための設定
  main:
    lazy-initialization: true
    banner-mode: off
  
  # JPA最適化
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        connection:
          provider_disables_autocommit: true
        jdbc:
          batch_size: 20
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        # セッション管理最適化
        session:
          events:
            log: false

# サーバー設定
server:
  port: ${PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  tomcat:
    threads:
      max: 50
      min-spare: 10
    connection-timeout: 20000

# ログ設定（本番環境 - デバッグ用）
logging:
  level:
    com.studyapp: ${LOG_LEVEL:DEBUG}
    org.springframework: ${SPRING_LOG_LEVEL:INFO}
    org.hibernate.SQL: ${HIBERNATE_SQL_LOG:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: ${HIBERNATE_BINDER_LOG:TRACE}
    org.springframework.orm.jpa: ${JPA_LOG_LEVEL:DEBUG}
    org.springframework.transaction: ${TRANSACTION_LOG_LEVEL:DEBUG}
    org.springframework.boot: ${BOOT_LOG_LEVEL:INFO}
    org.springframework.context: ${CONTEXT_LOG_LEVEL:INFO}
    org.springframework.beans: ${BEANS_LOG_LEVEL:INFO}
    root: ${ROOT_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 管理エンドポイント設定
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  health:
    db:
      enabled: true
    diskspace:
      enabled: true 